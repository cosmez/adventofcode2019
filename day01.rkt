#lang racket
(module+ test
  (require rackunit))

(define (get-fuel input)
  (- (floor (/ input 3)) 2)) 

(module+ test
  (check-equal? (get-fuel 12) 2 "fuel of 12")
  (check-equal? (get-fuel 14) 2 "fuel of 14")
  (check-equal? (get-fuel 1969) 654 "fuel of 654")
  (check-equal? (get-fuel 100756) 33583 "fuel of 100756"))


;paste your input here
(define input '(106947 129138 56893 75116 96763 108475 62574 137915 73556 69652 74098 131265 77267 72940 74859 128578 128024 125887 140457 97314 126150 148019 116715 54231 98892 73242 131621 122572 107437 75142 103755 141267 141024 80452 60619 104099 51541 63863 106932 75346 77073 57263 128967 124504 79388 124167 100073 97108 74180 137778 73793 131458 67579 102695 143794 96093 64490 96122 88901 53381 77850 96527 51943 107511 120126 64622 63053 116916 83990 143278 72390 101767 135915 126354 109714 56139 129849 89505 115213 145001 56506 83700 59071 80895 143177 120738 78270 100436 108389 62456 145335 102210 111779 95937 52626 134932 61925 97086 50211 96413))

 
(for/sum ([value input]) (get-fuel value))


(define (get-fuel-recursive input)
  (define fuel (- (floor (/ input 3)) 2))
  (if (> fuel  0)
      (+ fuel (get-fuel-recursive fuel))
      0))



(module+ test
  (check-equal? (get-fuel-recursive 12) 2 "recursive fuel of 12")
  (check-equal? (get-fuel-recursive 1969) 966 "recursive fuel of 1969")
  (check-equal? (get-fuel-recursive 100756) 50346 "recursive fuel of 100756"))

;paste your input here
(define input2 '(106947 129138 56893 75116 96763 108475 62574 137915 73556 69652 74098 131265 77267 72940 74859 128578 128024 125887 140457 97314 126150 148019 116715 54231 98892 73242 131621 122572 107437 75142 103755 141267 141024 80452 60619 104099 51541 63863 106932 75346 77073 57263 128967 124504 79388 124167 100073 97108 74180 137778 73793 131458 67579 102695 143794 96093 64490 96122 88901 53381 77850 96527 51943 107511 120126 64622 63053 116916 83990 143278 72390 101767 135915 126354 109714 56139 129849 89505 115213 145001 56506 83700 59071 80895 143177 120738 78270 100436 108389 62456 145335 102210 111779 95937 52626 134932 61925 97086 50211 96413))

(for/sum ([value input2]) (get-fuel-recursive value))